There is a board with M*N size. 
The board contains M*N blocks of 1*1 size.
Each block is printed a number on it.

You will be given a number, your task is to find whether the number is printed on 
any of the blocks or not. If found print true, otherwise print false.

NOTE: 
- The numbers printed on the board in each row and each column are
  in increasing order. And all the numbers are unique.

Input Format:
-------------
Line-1 -> Two integers M and N, board size.
Next M lines -> N space separated integers.
Last Line -> An integer T, number to search.

Output Format:
--------------
Print a boolean value, 'true' if number found.
otherwise, 'false'.


Sample Input-1:
---------------
4 4
1 3 6 10
2 5 9 13
4 8 12 16
7 11 14 17
5

Sample Output-1:
----------------
true


Sample Input-2:
---------------
4 4
1 3 6 10
2 5 9 13
4 8 12 16
7 11 14 17
15

Sample Output-2:
----------------
false


import sys
r,c=list(map(int,input().split()))
l=[list(map(int,input().split())) for i in range(r)]
ele=int(input())
i=0
while(i<r):
    if l[i][0]<=ele<=l[i][-1]:
        c_s,c_e=0,c-1
        while(c_s<=c_e):
            c_mid=(c_s+c_e)//2
            if l[i][c_mid]==ele:
                print(True)
                sys.exit()
            if l[i][c_mid]<ele:
                c_s=c_mid+1
            if l[i][c_mid]>ele:
                c_e=c_mid-1
    i+=1
else:
    print(False)