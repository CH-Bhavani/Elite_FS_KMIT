Clavius, the person who suggested grouping of data using brackets.
He has suggested that the grouping should be well formed.
Well formed groupings are as follows, (), [], {}, {()}, {[]()}, {[]}(), etc.

You will be given a string S, return true if the string S is a well formed 
grouping, otherwise false.

Note: S contains only characters ( ) [ ] { }

Input Format:
-------------
A string S, contains only characters (){}[]

Output Format:
--------------
Print a boolean value.


Sample Input-1:
---------------
{[([])[]]}

Sample Output-1:
----------------
true

Sample Input-2:
---------------
{[([])[]}]

Sample Output-2:
----------------
false


def definition(expr):
    par = []
 
    
    for char in expr:
        if char in ["(", "{", "["]:
 
            
            par.append(char)
        else:
 
            
            if not par:
                return False
            curr = par.pop()
            if curr == '(':
                if char != ")":
                    return False
            if curr == '{':
                if char != "}":
                    return False
            if curr == '[':
                if char != "]":
                    return False
 
    
    if par:
        return False
    return True
 
 

Parenthesis = input()
 
    
if definition(Parenthesis):
    print("True")
else:
    print("False")