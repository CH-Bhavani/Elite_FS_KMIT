Suppose you are given the following code:

class KmitNgit {
  public void kmit() {
    for (int i = 0; i < n; i++) {
      print("Kmit");
    }
  }

  public void ngit() {
    for (int i = 0; i < n; i++) {
      print("Ngit");
    }
  }
}

The same instance of KmitNgit will be passed to two different threads. 
Thread A will call kmit() while thread B will call ngit(). 
Modify the given program to output "KmitNgit" n times.

Input Format:
-------------
An integer N.

Output Format:
--------------
Print KmitNgit for N times using threads.


Sample Input:
-------------
1
Sample Output:
--------------
KmitNgit

Explanation:
------------
There are two threads being fired asynchronously. 
One of them calls kmit(), while the other calls ngit(). 
"KmitNgit" is being output 1 time.


Sample Input:
-------------
2

Sample Output:
--------------
KmitNgitKmitNgit

Explanation:
------------
"KmitNgit" is being output 2 times.

import java.util.*;

class KmitNgit{
    int n;
    int flag=0;
    KmitNgit(int n){
        this.n = n;
    }
    synchronized public void kmit() {
    for (int i = 0; i < n; i++) {
        while(flag==1){
            try{
                this.wait();
            }
            catch(Exception e){
                System.out.print("Error");
            }
        }
      System.out.print("Kmit");
      flag=1;
      this.notifyAll();
      
    }
   }

    synchronized public void ngit() {
    for (int i = 0; i < n; i++) {
        while(flag==0){
            try{
                this.wait();
            }
            catch(Exception e){
                System.out.print("Error");
            }
        }
      System.out.print("Ngit");
      flag=0;
      this.notifyAll();
    }
    
   }
}

class Thread1 implements Runnable {
    KmitNgit data;
    Thread1(KmitNgit n){
        this.data = n;
    }
    @Override
    public void run(){
        synchronized(data){
           data.kmit();
        }
    }
}
class Thread2 implements Runnable {
    KmitNgit data;
    Thread2(KmitNgit n){
        this.data = n;
    }
    @Override
    public void run(){
        synchronized(data){
            data.ngit();
        }
    }
}

class eday5prog4{
    
    public static void main(String args[]){
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        KmitNgit kn = new KmitNgit(n);
        Thread1 t1 = new Thread1(kn);
        Thread2 t2 = new Thread2(kn);
        (new Thread(t1)).start();
        (new Thread(t2)).start();
    }
}
